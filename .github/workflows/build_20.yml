name: build nodejs v20

on: 
  workflow_dispatch:
    inputs:
      tag_sdk:
        description: 'tag sdk'     
        required: true

env:
  VERSION: 20.16.0

jobs:
  build_windows:
    name: Windows
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v4
    - name: Install packages
      run: |
        choco install nasm
        echo "C:\Program Files\NASM" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - name: Run build script
      continue-on-error: true
      shell: cmd
      run: |
        cd %GITHUB_WORKSPACE%
        call .\build_windows.cmd ${{env.VERSION}}
    - name: Run copy script
      shell: cmd
      run: |
        cd %GITHUB_WORKSPACE%
        call .\copy-x64-windows.cmd
    - uses: actions/upload-artifact@v4
      with:
        name: nodejs_bin
        path: installed/**/*

  build_android_arm64_shared:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 2560
          remove-dotnet: 'true'
          remove-haskell: 'true'
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check Free space
        run: |
          echo "Free space:"
          df -h
      - name: Install NDK
        run: |
          cd ~
          sudo apt install unzip -y
          wget -O NDK -q https://dl.google.com/android/repository/android-ndk-r27-linux.zip
          unzip -q NDK
      - name: Build
        run: |
          cd $GITHUB_WORKSPACE
          sh ./build_android.sh ${{env.VERSION}} arm64
      - name: Run copy script
        run: |
          cd $GITHUB_WORKSPACE
          sh ./copy_android.sh arm64
      - uses: actions/upload-artifact@v4
        with:
          name: nodejs_bin
          path: ~/installed/**/*

  publish:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: [build_windows,build_android_arm64_shared]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: nodejs_bin
          path: nodejs_bin/

      - name: Create Release Asset
        run: |
          cd nodejs_bin/ && tar cvfz ../nodejs_bin_${{env.VERSION}}.tgz nodejs && cd -

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: NodeJS_${{env.VERSION}}_${{ github.event.inputs.tag_sdk }}
          release_name: NodeJS_${{env.VERSION}}_${{ github.event.inputs.tag_sdk }}
          draft: false
          prerelease: false

      - name: Upload nodejs_bin
        #id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./nodejs_bin_${{env.VERSION}}.tgz
          asset_name: nodejs_bin_${{env.VERSION}}.tgz
          asset_content_type: application/tgz
